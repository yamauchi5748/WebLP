// ------------------------------------------
// レスポンシブ表示切り替え用
// ------------------------------------------
@mixin devicePC {
  @media screen and (min-width: 768px) {
    @content;
  }
}
@mixin deviceSP {
  @media screen and (max-width: 767px) {
    @content;
  }
}

// ------------------------------------------
// 三角形
// ------------------------------------------
@mixin triangle($direction: right, $size: 12, $color: gray) {
  $set: left;

  @if $direction == left {
    $set: right;
  } @else if $direction == top {
    $set: bottom;
  } @else if $direction == bottom {
    $set: top;
  } @else {
    $set: left;
  }
  $size: round($size / 2);

  width: 0;
  height: 0;
  border: $size + px solid transparent;
  border-#{$set}-color: $color;
}

// ------------------------------------------
// 矢印　＞
// ------------------------------------------
@mixin arrow($width, $bold, $color, $deg) {
  border-style: solid;
  border-width: 0 #{$bold}px #{$bold}px 0;
  content: "";
  display: inline-block;
  position: absolute;
  height: #{$width}px;
  width: #{$width}px;
  border-color: #{$color};
  //角度
  @if ($deg == "left") {
    transform: rotate(135deg);
  } @else if ($deg == "top") {
    transform: rotate(225deg);
  } @else if ($deg == "right") {
    transform: rotate(-45deg);
  } @else if ($deg == "bottom") {
    transform: rotate(45deg);
  }
  //SPの時
  @include deviceSP() {
    height: #{$width/2}px;
    width: #{$width/2}px;
  }
}

// ------------------------------------------
// 親要素に対して中央寄せ
// ------------------------------------------
@mixin centered {
  margin: 0 auto;
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

// ------------------------------------------
// ウィンドウ幅のブロック
// ------------------------------------------
@mixin full-width() {
  margin-left: calc((100vw - 100%) / -2);
  margin-right: calc((100vw - 100%) / -2);
  max-width: auto; // IE対策
  max-width: initial;
}


// ------------------------------------------
// 要素を移動させる
// ------------------------------------------
@mixin Move($name: top, $from: 0 0 0 0, $to: 20px 0 0 20px, $speed: 0.5s, $duration: 2s, $delay: 0.5s, $from_opacity: 1, $to_opacity: 1) {
  animation: $name $duration forwards;
  animation-delay: $delay;
  transition: $speed;
  @keyframes top {
    0% {
      opacity: $from_opacity;
      padding: $from;
    }
    100% {
      opacity: $to_opacity;
      padding: $to;
    }
  }
}

@mixin MoveTop($from: 0 0 0 0, $to: 20px 0 0 20px, $speed: 0.5s, $duration: 2s, $delay: 0.5s, $from_opacity: 1, $to_opacity: 1) {
  animation: top $duration forwards;
  animation-delay: $delay;
  transition: $speed;
  @keyframes top {
    0% {
      opacity: $from_opacity;
      padding: $from;
    }
    100% {
      opacity: $to_opacity;
      padding: $to;
    }
  }
}
@mixin MoveRight($from: 0 0 0 0, $to: 20px 0 0 20px, $speed: 0.5s, $duration: 2s, $delay: 0.5s, $from_opacity: 1, $to_opacity: 1) {
  animation: right $duration forwards;
  animation-delay: $delay;
  transition: $speed;
  @keyframes right {
    0% {
      opacity: $from_opacity;
      padding: $from;
    }
    100% {
      opacity: $to_opacity;
      padding: $to;
    }
  }
}
@mixin MoveBottom($from: 0 0 0 0, $to: 20px 0 0 20px, $speed: 0.5s, $duration: 2s, $delay: 0.5s, $from_opacity: 1, $to_opacity: 1) {
  animation: bottom $duration forwards;
  animation-delay: $delay;
  transition: $speed;
  @keyframes bottom {
    0% {
      opacity: $from_opacity;
      padding: $from;
    }
    100% {
      opacity: $to_opacity;
      padding: $to;
    }
  }
}

@mixin MoveLeft($from: 0 0 0 0, $to: 20px 0 0 20px, $speed: 0.5s, $duration: 2s, $delay: 0.5s, $from_opacity: 1, $to_opacity: 1) {
  animation: left $duration forwards;
  animation-delay: $delay;
  transition: $speed;
  @keyframes left {
    0% {
      opacity: $from_opacity;
      padding: $from;
    }
    100% {
      opacity: $to_opacity;
      padding: $to;
    }
  }
}

@mixin contentScale {
  animation: contentScale 2.6s forwards;
  @keyframes contentScale {
    70% {
      -webkit-transform: perspective(800px) scale(0.9) rotateX(15deg);
      transform: perspective(800px) scale(0.9) rotateX(15deg);
    }
    100% {
      -webkit-transform: perspective(800px) scale(1) rotateX(0);
      transform: perspective(800px) scale(1) rotateX(0);
    }
  }
}
